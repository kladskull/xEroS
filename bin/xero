#!/usr/bin/php
<?php declare(strict_types=1);

namespace Xeros;

use Dotenv\Dotenv;

declare(ticks=1);
bcscale(0);
date_default_timezone_set('UTC');
mb_internal_encoding('UTF-8');
$utf_set = ini_set('default_charset', 'utf-8');

// set path constants
$appDir = __DIR__ . DIRECTORY_SEPARATOR . '../';
define('APP_DIR', $appDir);

// includes
require APP_DIR . 'vendor/autoload.php';

// get the interpreter version
$phpVersion = ((PHP_MAJOR_VERSION * 10000) + (PHP_MINOR_VERSION * 1000) + PHP_RELEASE_VERSION);
if ($phpVersion < 81001) {
    Console::log('The minimum version of PHP must be 8.1');
    exit(1);
}

// setup .env
if (!file_exists(APP_DIR . '/.env')) {
    echo 'rename .env_sample to .env, and change the values accordingly', PHP_EOL;
    exit(0);
}

// load the environment
$dotenv = Dotenv::createImmutable(APP_DIR);
$dotenv->load();

// bootstrap from Genesis?
$block = new Block();
if ($block->getCurrentHeight() === 0) {
    $block->addFullBlock($block->genesis(), false);
}

// if there is no state, we're likely needing to sync from the network
$store = new DataStore();
$state = $store->getKey('state', '');
if (empty($state)) {
    $store->add('state', Node::Syncing);
}

$listenIp = Config::getListenAddress();
$listenPort = Config::getListenPort();

if (!empty($argv[1])) {
    $listenIp = $argv[1];
}

if (!empty($argv[2])) {
    $listenPort = (int)$argv[2];
}

$node = new Node();
$node->listen($listenIp, $listenPort);
